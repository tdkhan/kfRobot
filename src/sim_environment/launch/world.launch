<?xml version="1.0" encoding="UTF-8"?>

<launch>

	<arg name="rviz" default="true"/>
	<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
	<arg name="x_pos" default="-2.0"/>
	<arg name="y_pos" default="-0.5"/>
	<arg name="z_pos" default="0.0"/>

	<!-- World File -->
	<arg name="world_file" default="$(find sim_environment)/worlds/project_world.world"/>

	<!-- Launch Gazebo World -->
  	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="use_sim_time" value="true"/>
		<arg name="debug" value="false"/>
		<arg name="gui" value="true"/>
		<arg name="world_name" value="$(arg world_file)"/>

	</include>

	<!-- Robot Model File -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

	<!-- Robot state publisher node: Publishes TF frames for usage in Rviz -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

	<!-- Rviz -->
	<group if="$(arg rviz)">
		<node name="rviz" pkg="rviz" type="rviz" args="-d $(find sim_environment)/config/turtlebot_data.rviz"/>
	</group>

	<!-- Robot Spawn Node -->
	<node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

	<!-- Obstacle Avoidance -->
	<node pkg="obstacle_avoidance" type="node.py" name="obstacle_avoidance_node" output="screen"/>

</launch>